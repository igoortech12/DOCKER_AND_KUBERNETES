Instalando Docker

Windows:
    Docker Desktop

Linux:
    Docker Engine
    Minikube https://minikube.sigs.k8s.io/docs/start/
    Driver minikube (caso precise) https://minikube.sigs.k8s.io/docs/drivers/none/

CAPÍTULO 2 - PRIMEIROS PASSOS COM KUBERNETES
Clonando repositório
    git clone git@github.com:cloudnativedevops/demo.git
    
Acessando diretório clonado 
    cd demo

Executando primeiro container
    docker container run -p 9999:8888 --name hello cloudnatived/demo:hello

Acessando diretório hello
    cd hello

Visualizando arquivo de criação de imagem Dockerfile
    vi Dockerfile

Criando imagem a partir do Dockerfile
    docker image build -t myhello .

Listar todos os container já criados
    docker container ls -a

Executar container myhello - criado com Dockerfile
    docker container run -p 9999:8888 myhello

Executar container com porta definida
    docker container -p PORTA_DO_HOST:PORTA_DO_CONTAINER ...

Conectando ao Docker Hub
    docker login

Criando nome para imagem
    docker image tag myhello igoorech/myhello

Enviar imagem preparada
    docker image push igoorech/myhello

Executando imagem envia para Docker Hub
    docker container run --name myhello_dockerhub -p 9999:8888 igoortech/myhello 

Instalar Kubectl (Ubuntu)
    sudo apt-get update
    sudo apt-get install -y apt-transport-https ca-certificates curl
    sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
    echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    sudo apt-get update
    sudo apt-get install -y kubectl

Excutar aplicação demo Kubernetes 
    kubectl run demo --image=igoortech/hello --port=9999 --labels app=demo

Criando novos exemplos de deploy
    kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
    kubectl expose deployment hello-minikube --type=NodePort --port=8080

Observando dos os recursos do Kubernetes 
    kubectl get all

Deletando POD (Se tiver ReplicaSet o POD será reconstruído após sua exclusão)
    kubectl delete pod <NOME_DO_POD>
    kubectl delete pod hello-minikube

Deletando todo serviço
    kubectl delete replicaset <NOME-DO-REPLICASET>
    kubectl delete deployment <NOME-DO-DEPLOYMENT>

MANIFESTO (YAML)
Exemplo de MANIFESTO (TIPO: DEPLOYMENT)
    apiVersion: apps/v1
    kind: Deployment
    metadata:
    name: demo
    labels:
        app: demo
    spec:
    replicas: 1
    selector:
        matchLabels:
        app: demo
    template:
        metadata:
        labels:
            app: demo
        spec:
        containers:
            - name: demo
            image: cloudnatived/demo:hello
            ports:
            - containerPort: 8888

Aplicando um manifesto YAML (DEPLOYMENT)
    kubectl apply -f <NOME-DO-MANIFESTO.yaml>

Observando manifesto criado 
    kubectl get all

Exemplo de MANIFESTO (TIPO: SERVICE)
    apiVersion: v1
    kind: Service
    metadata:
      name: demo
      labels:
        app: demo
    spec:
    # NOTE: depending on which version of the book you have, this may say port 9999. The latest version of the book uses 8888 to match the pod.
      ports:
      - port: 8888
        protocol: TCP
        targetPort: 8888
      selector: #Informa como rotear requisições para Pods específicos. 
        app: demo
    type: ClusterIP

Aplicando um manifesto YAML (SERVICE)
    kubectl apply -f <NOME-DO-MANIFESTO.yaml>

Observando serviços do Kubernetes 
    kubectl get services

Conectar porta LOCALHOST à porta do SERVICE 
    kubectl port-forward <SERVICE/NOME-DO-SERVIÇO> 9999:<PORTA-DO-SERVIÇO>

HELM: GERENCIADOR DE PACOTES
Instalando HELM
    https://helm.sh/docs/intro/install/

Instalando manisfesto Helm
    helm install <NOME-DA-APLICAÇÃO> <LOCAL-D0-MANIFESTO>
    helm install demo ./k8s/demo 

